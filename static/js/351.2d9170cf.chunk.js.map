{"version":3,"file":"static/js/351.2d9170cf.chunk.js","mappings":"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","sources":["API/API.jsx","style/Home.style.jsx","components/Movies/MoviesList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/Page/PageMovies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst config = {\n  params: {\n    api_key: 'e1a73f9bc0bcf167e9f1fe8a41807ba9',\n  },\n};\n\nexport default async function SearchTrending() {\n  try {\n    const res = await axios.get(`trending/movie/day`, config);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchById(id) {\n  try {\n    const res = await axios.get(`movie/${id}`, config);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesCast(id) {\n  try {\n    const res = await axios.get(`movie/${id}/credits`, config);\n    return res.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesReviews(id) {\n  try {\n    const res = await axios.get(`movie/${id}/reviews`, config);\n    return res.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesByQuery(query) {\n  const configs = {\n    params: {\n      api_key: 'e1a73f9bc0bcf167e9f1fe8a41807ba9',\n      query,\n    },\n  };\n  try {\n    const res = await axios.get(`search/movie`, configs);\n    console.log('query', res);\n    return res.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import styled from 'styled-components';\n\nconst LinkList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport { LinkList };\n","import { Continer } from 'style/Container.styled';\nimport { LinkList } from 'style/Home.style';\nimport { Link, useLocation } from 'react-router-dom';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Continer>\n      <LinkList>\n        {movies.map(({ title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </LinkList>\n    </Continer>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  padding: 10px;\n  margin-top: 20px;\n`;\n\nconst SearchBtn = styled.button`\n    display: inline-block;\n    padding: 10px;\n    margin-left: 15px;\n    background-color: rgb(116, 153, 46);\n    border-radius: 5px;\n}\n`;\n\nexport { Input, SearchBtn };\n","import Notiflix from 'notiflix';\nimport { Input } from './Form.styled';\nimport { useState } from 'react';\nimport { SearchBtn } from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handlerChange = e => setQuery(e.target.value);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      Notiflix.Notify.failure('Please enter a valid value');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handlerSubmit}>\n        <label>\n          <Input onChange={handlerChange} value={query} type=\"text\"></Input>\n        </label>\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import { useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form/Form';\nimport { SearchMoviesByQuery } from 'API/API';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/Movies/MoviesList';\n\nexport default function PageMovies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    SearchMoviesByQuery(query).then(data => {\n      if (!query) {\n        return;\n      }\n\n      setMovies(data);\n    });\n  }, [query]);\n\n  const onSubmit = searchQuery => setSearchParams({ query: searchQuery });\n  return (\n    <>\n      <Form onSubmit={onSubmit} />\n      <MoviesList movies={movies} />\n    </>\n  );\n}\n"],"names":["axios","config","params","api_key","SearchTrending","res","data","console","log","message","SearchById","id","SearchMoviesCast","cast","SearchMoviesReviews","results","SearchMoviesByQuery","query","configs","LinkList","styled","movies","location","useLocation","map","title","to","state","from","Input","SearchBtn","onSubmit","useState","setQuery","e","preventDefault","trim","Notiflix","onChange","target","value","type","PageMovies","useSearchParams","searchParams","setSearchParams","setMovies","get","useEffect","then","searchQuery","MoviesList"],"sourceRoot":""}