{"version":3,"file":"static/js/525.bef06596.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,CACbC,OAAQ,CACNC,QAAS,qCAIE,SAAeC,IAA9B,4CAAe,OAAf,oBAAe,6GAEOJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFvC,cAELI,EAFK,yBAGJA,EAAIC,MAHA,gCAKXC,QAAQC,IAAI,KAAMC,SALP,gFASR,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEeX,EAAAA,EAAAA,IAAA,gBAAmBW,GAAMV,GAFxC,cAEGI,EAFH,yBAGIA,EAAIC,MAHR,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,gGAEeX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAiCV,GAFhD,cAEGI,EAFH,yBAGIA,EAAIC,KAAKO,MAHb,gCAKHN,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAmCH,GAAnC,gGAEeX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAiCV,GAFhD,cAEGI,EAFH,yBAGIA,EAAIC,KAAKS,SAHb,gCAKHR,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,gFACCC,EAAU,CACdhB,OAAQ,CACNC,QAAS,mCACTc,MAAAA,IAJC,kBAQejB,EAAAA,EAAAA,IAAA,eAA0BkB,GARzC,cAQGb,EARH,OASHE,QAAQC,IAAI,QAASH,GATlB,kBAUIA,EAAIC,KAAKS,SAVb,gCAYHR,QAAQC,IAAI,KAAMC,SAZf,gF,sFCHP,UArCA,WAA0B,IAAD,EACfU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,WAWhD,OATAC,EAAAA,EAAAA,YAAU,WACJb,IACFT,EAAAA,EAAAA,IAAWS,GAASc,MAAK,YAAsC,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAC1CZ,EAASW,GACTT,EAAUU,EACX,GAEJ,GAAE,CAAChB,KAGF,iCACE,uBAAIG,KACJ,SAAC,KAAD,CAAMc,GAAIR,EAASS,QAAnB,SAA4B,aAC5B,gBAAKC,IAAKd,EAAM,UAtBN,mCAsBM,OAAgBA,GAAWA,EAAQe,IAAKf,KACxD,wBAAI,wBACJ,2BACE,yBACE,SAAC,KAAD,CAAMY,GAAE,OAAR,SAAkB,YAEpB,yBACE,SAAC,KAAD,CAAMA,GAAE,UAAR,SAAqB,kBAGzB,SAAC,EAAAI,SAAD,CAAUC,UAAU,yBAAK,YAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["API/API.jsx","Page/Moviesdetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst config = {\n  params: {\n    api_key: 'e1a73f9bc0bcf167e9f1fe8a41807ba9',\n  },\n};\n\nexport default async function SearchTrending() {\n  try {\n    const res = await axios.get(`trending/movie/day`, config);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchById(id) {\n  try {\n    const res = await axios.get(`movie/${id}`, config);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesCast(id) {\n  try {\n    const res = await axios.get(`movie/${id}/credits`, config);\n    return res.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesReviews(id) {\n  try {\n    const res = await axios.get(`movie/${id}/reviews`, config);\n    return res.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesByQuery(query) {\n  const configs = {\n    params: {\n      api_key: 'e1a73f9bc0bcf167e9f1fe8a41807ba9',\n      query,\n    },\n  };\n  try {\n    const res = await axios.get(`search/movie`, configs);\n    console.log('query', res);\n    return res.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { SearchById } from 'API/API';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nfunction MoviesDetails() {\n  const { movieId } = useParams();\n  const [title, setTitle] = useState();\n  const [poster, setPoster] = useState('');\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/movies');\n\n  useEffect(() => {\n    if (movieId) {\n      SearchById(movieId).then(({ original_title, poster_path }) => {\n        setTitle(original_title);\n        setPoster(poster_path);\n      });\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      <p>{title}</p>\n      <Link to={backLink.current}>Go Back</Link>\n      <img src={poster ? `${IMG_URL}${poster}` : poster} alt={poster} />\n      <h2>Infomation details</h2>\n      <ul>\n        <li>\n          <Link to={`cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`reviews`}>Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MoviesDetails;\n"],"names":["axios","config","params","api_key","SearchTrending","res","data","console","log","message","SearchById","id","SearchMoviesCast","cast","SearchMoviesReviews","results","SearchMoviesByQuery","query","configs","movieId","useParams","useState","title","setTitle","poster","setPoster","location","useLocation","backLink","useRef","state","from","useEffect","then","original_title","poster_path","to","current","src","alt","Suspense","fallback"],"sourceRoot":""}