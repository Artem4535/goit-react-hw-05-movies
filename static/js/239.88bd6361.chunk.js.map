{"version":3,"file":"static/js/239.88bd6361.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,CACbC,OAAQ,CACNC,QAAS,qCAIE,SAAeC,IAA9B,4CAAe,OAAf,oBAAe,6GAEOJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFvC,cAELI,EAFK,yBAGJA,EAAIC,MAHA,gCAKXC,QAAQC,IAAI,KAAMC,SALP,gFASR,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEeX,EAAAA,EAAAA,IAAA,gBAAmBW,GAAMV,GAFxC,cAEGI,EAFH,yBAGIA,EAAIC,MAHR,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,gGAEeX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAiCV,GAFhD,cAEGI,EAFH,yBAGIA,EAAIC,KAAKO,MAHb,gCAKHN,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAmCH,GAAnC,gGAEeX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAiCV,GAFhD,cAEGI,EAFH,yBAGIA,EAAIC,KAAKS,SAHb,gCAKHR,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,gFACCC,EAAU,CACdhB,OAAQ,CACNC,QAAS,mCACTc,MAAAA,IAJC,kBAQejB,EAAAA,EAAAA,IAAA,eAA0BkB,GARzC,cAQGb,EARH,OASHE,QAAQC,IAAI,QAASH,GATlB,kBAUIA,EAAIC,KAAKS,SAVb,gCAYHR,QAAQC,IAAI,KAAMC,SAZf,gF,oHCXP,EA5BmB,WACjB,IAAQU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOR,EAAP,KAAaS,EAAb,KAOA,OANAf,QAAQC,IAAI,UAAWW,IAEvBI,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAiB,GAAD,OAAIO,IAAWK,KAAKF,EACrC,GAAE,CAACH,KAGF,+BACE,wBACGN,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,UAAhC,OACR,2BACE,gBACEC,IAAKF,EAAY,UAjBf,mCAiBe,OAAgBA,G,01EACjCG,IAAKJ,EACLK,MAAM,SAER,wBAAKL,KACL,uBAAIE,MARE,OAcjB,C","sources":["API/API.jsx","components/MoviesCast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst config = {\n  params: {\n    api_key: 'e1a73f9bc0bcf167e9f1fe8a41807ba9',\n  },\n};\n\nexport default async function SearchTrending() {\n  try {\n    const res = await axios.get(`trending/movie/day`, config);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchById(id) {\n  try {\n    const res = await axios.get(`movie/${id}`, config);\n    return res.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesCast(id) {\n  try {\n    const res = await axios.get(`movie/${id}/credits`, config);\n    return res.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesReviews(id) {\n  try {\n    const res = await axios.get(`movie/${id}/reviews`, config);\n    return res.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function SearchMoviesByQuery(query) {\n  const configs = {\n    params: {\n      api_key: 'e1a73f9bc0bcf167e9f1fe8a41807ba9',\n      query,\n    },\n  };\n  try {\n    const res = await axios.get(`search/movie`, configs);\n    console.log('query', res);\n    return res.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { SearchMoviesCast } from '../API/API';\nimport defaultPhoto from '../Images/defaultPhoto.jpg';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MoviesCast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  console.log('movieId', movieId);\n\n  useEffect(() => {\n    SearchMoviesCast(`${movieId}`).then(setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {cast.map(({ original_name, profile_path, character }) => (\n          <li>\n            <img\n              src={profile_path ? `${IMG_URL}${profile_path}` : defaultPhoto}\n              alt={original_name}\n              width=\"150\"\n            />\n            <h2>{original_name}</h2>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesCast;\n"],"names":["axios","config","params","api_key","SearchTrending","res","data","console","log","message","SearchById","id","SearchMoviesCast","cast","SearchMoviesReviews","results","SearchMoviesByQuery","query","configs","movieId","useParams","useState","setCast","useEffect","then","map","original_name","profile_path","character","src","alt","width"],"sourceRoot":""}